@using dn32.infra.Nucleo.Models
@using dn32.infra.extensoes
@using dn32.infra
@using System.Reflection;
@using dn32.infra.atributos
@using dn32.infra.enumeradores
@using dn32.infra.nucleo.atributos
@using dn32.infra.Interfaces;

@using static dn32.infra.DnDocExtension

@model DnJsonSchema

@{
    ViewData["Title"] = Model.Formulario.Nome;
}
<script>
    function navegate(url) {
        window.location.href = url;
    }
</script>
<div class="one-service-container">
    <h4 class="general-title">@Model.Formulario.Nome</h4>

    @{
        string Is(bool operation, string text)
        {
            return operation ? text : "";
        }

        <div class="properties-container" style="apresentar:@(Model.Propriedades.Any() ? "block" : "none")">
            <span class="title">@(("Propriedades").G())</span>
            <table class="properties">
                <thead>
                    <tr>
                        <th>@(("Propriedade").G())</th>
                        <th>@(("Name").G())</th>
                        <th>@(("Description").G())</th>
                        <th>@(("Tipo").G())</th>
                        <th>@(("Others").G())</th>
                    </tr>
                </thead>
                @foreach (var property in Model.Propriedades)
                {
                    if (property.Formulario == EnumTipoDeComponenteDeFormularioDeTela.Nenhum) { continue; }
                    if (property.Propriedade?.GetCustomAttribute<DnDocAtributo>()?.Apresentacao == EnumApresentar.Ocultar) { continue; }

                    var range = (property.Minimo == property.Maximo ? property.Minimo.ToString() : property.Minimo + ", " + property.Maximo);
                    range = range == "0" ? "" : $" ({range})";

                    <tr class="property">
                        <td class="name">@property.NomeDaPropriedade</td>
                        <td class="name">@property.Nome</td>
                        <td class="Descricaoription">@property.Descricao</td>

                        @if (string.IsNullOrWhiteSpace(property.Link))
                        {
                            <td class="tipo">@Html.Raw(property.Tipo.GetFriendlyName())</td>
                        }
                        else
                        {
                            <td class="tipo"><a href="@property.Link">@Html.Raw(property.Tipo.GetFriendlyName())</a></td>
                        }
                        <td>
                            @Html.Raw(Is(property.EhEnumerador, "<span><img src='/DnDoc/img/ok.png'/> " + "enum".G() + "</span>"))
                            @Html.Raw(Is(property.EhChave || property.EhDnChaveUnica, "<span><img src='/DnDoc/img/ok.png'/> " + "key".G() + "</span>"))
                            @Html.Raw(Is(property.EhLista, "<span><img src='/DnDoc/img/ok.png'/> " + "list".G() + "</span>"))
                            @Html.Raw(Is(property.PermiteNulo, "<span><img src='/DnDoc/img/ok.png'/> " + "nullable".G() + "</span>"))
                            @Html.Raw(Is(property.EhRequerido, "<span><img src='/DnDoc/img/ok.png'/> " + "EhRequerido".G() + "</span>"))
                            @Html.Raw(Is(property.Agregacao != null, "<span><img src='/DnDoc/img/ok.png'/> " + "navegation".G() + "</span>"))
                            @Html.Raw(Is(property.Composicao != null, "<span><img src='/DnDoc/img/ok.png'/> " + "navegation".G() + "</span>"))
                            @Html.Raw(Is(property.EhChaveExterna, "<span><img src='/DnDoc/img/ok.png'/>  " + "fk".G() + " <a href=\"/DnDoc/Model?Nome=" + property.DestinoDeChaveExterna?.Tipo?.Name + "\">" + property.DestinoDeChaveExterna?.NomeDaPropriedade + "</a></span>"))
                        </td>
                    </tr>
                }
            </table>
            @{
                var exampleValue = Model.Formulario?.Tipo?.GetExampleValueString() ?? "";

                if (!string.IsNullOrWhiteSpace(exampleValue) && exampleValue != "null")
                {
                    <div class="example-valor-container">
                        <span>@("Example valor".G())</span>
                        <pre class="example-value">@exampleValue</pre>
                    </div>
                }
            }
        </div>
    }
</div>
